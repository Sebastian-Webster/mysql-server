--source include/not_have_jdv_dml.inc

CREATE TABLE t1(t1c1 INT PRIMARY KEY, t1c2 INT);
INSERT INTO t1 VALUES (0,0), (1,1), (2,2);

CREATE JSON DUALITY VIEW dv0 AS
SELECT JSON_DUALITY_OBJECT(
    WITH (INSERT, UPDATE, DELETE)
    "_id" : t1c1,
    "kt1c2" : t1c2)
FROM t1;

SELECT * FROM dv0;

--error ER_JDV_FEATURE_EDITION_LIMIT
INSERT INTO dv0 VALUES ('{ "_id": 3, "kt1c2": 3}');

--error ER_JDV_FEATURE_EDITION_LIMIT
UPDATE dv0 SET data = JSON_REPLACE(data, '$."kt1c2"', 6)
WHERE data->'$._id' = 2;

--error ER_JDV_FEATURE_EDITION_LIMIT
DELETE FROM dv0 WHERE data->'$._id' = 2;

DROP VIEW dv0;
DROP TABLE t1;

--echo #
--echo # Bug#37943451: sql_union.cc:503: bool Query_expression::optimize(THD *,
--echo #  TABLE *, bool): Assertion `is_prepared() && !is_optimized()'
--echo #

CREATE TABLE t1(id INT PRIMARY KEY, x INT, y INT);
INSERT INTO t1 VALUES (1,2,3), (2,3,4), (3,4,5);

CREATE JSON DUALITY VIEW v1 AS SELECT
JSON_DUALITY_OBJECT(
  WITH(UPDATE, DELETE, INSERT)
  '_id' : id,
  'x' : x,
  'y' : y)
FROM t1;

--error ER_JDV_FEATURE_EDITION_LIMIT
UPDATE v1,t1 SET DATA = '{"_id":1, "x":100, "y":200}' WHERE data->'$._id' = 1;

DROP VIEW v1;
DROP TABLE t1;

