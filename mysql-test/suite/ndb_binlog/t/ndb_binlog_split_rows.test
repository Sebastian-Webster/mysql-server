--source include/have_ndb.inc
--source include/have_binlog_format_mixed_or_row.inc

# Establish connections
--connect(mysqld1,127.0.0.1,root,,test,$MASTER_MYPORT,)
--connect(mysqld2,127.0.0.1,root,,test,$MASTER_MYPORT1,)
--connect(mysqld3,127.0.0.1,root,,test,$MASTER_MYPORT2,)
--connect(mysqld4,127.0.0.1,root,,test,$MASTER_MYPORT3,)

# Supressors
--connection mysqld1
--disable_query_log ONCE
call mtr.add_suppression("mysqld startup An incident event has been written");
call mtr.add_suppression("Failed to setup binlogging");
--connection mysqld2
--disable_query_log ONCE
call mtr.add_suppression("mysqld startup An incident event has been written");
call mtr.add_suppression("Failed to setup binlogging");
call mtr.add_suppression("Distribution of CREATE TABLE");
--connection mysqld3
--disable_query_log ONCE
call mtr.add_suppression("mysqld startup An incident event has been written");
call mtr.add_suppression("Failed to setup binlogging");
call mtr.add_suppression("Distribution of CREATE TABLE");
--connection mysqld4
--disable_query_log ONCE
call mtr.add_suppression("mysqld startup An incident event has been written");
call mtr.add_suppression("Failed to setup binlogging");
call mtr.add_suppression("Distribution of CREATE TABLE");

--echo ######################################################
--echo # WL#15413 Subscriber row hash filter
--echo ######################################################
--echo #
--echo # General tests

--error ER_INCORRECT_GLOBAL_LOCAL_VAR
SET @@GLOBAL.ndb_log_row_slice_count = 2;
--error ER_INCORRECT_GLOBAL_LOCAL_VAR
SET @@GLOBAL.ndb_log_row_slice_id = 2;

--echo # #######################################################################
--echo # First scenario:
--echo #
--echo # In this test, there are two split groups of binlogged rows: group 0
--echo # logged by mysqld.1 and mysqld.2, and group 1 logged by mysqld.3 and
--echo # mysqld.4. (mysqld.1 == mysqld.3 && mysqld.2 == mysqld.4)
--echo # In the end, the binlogged rows must match what has been written.
--echo

# Restart servers setting up the new options
--connection mysqld1
--let $restart_parameters= restart:--ndb-log-row-slice-count=2 --ndb-log-row-slice-id=0
--let $mysqld_name= mysqld.1.1
--source include/restart_mysqld.inc

--connection mysqld2
--let $restart_parameters= restart:--ndb-log-row-slice-count=2 --ndb-log-row-slice-id=1
--let $mysqld_name= mysqld.2.1
--source include/restart_mysqld.inc

--connection mysqld3
--let $restart_parameters= restart:--ndb-log-row-slice-count=2 --ndb-log-row-slice-id=0
--let $mysqld_name= mysqld.3.1
--source include/restart_mysqld.inc

--connection mysqld4
--let $restart_parameters= restart:--ndb-log-row-slice-count=2 --ndb-log-row-slice-id=1
--let $mysqld_name= mysqld.4.1
--source include/restart_mysqld.inc

--connection mysqld1
# Mysqld.1 - Create table and insert data
CREATE TABLE t1 (k INT PRIMARY KEY, a VARCHAR(1024), b VARBINARY(2048)) ENGINE = NDB;
--save_master_pos

# Only need to save for 2 servers, as the other pair is doing the same

# Mysqld.1 - Save binlog file and positions after table created
--let $binlog_file1= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos1= query_get_value("SHOW BINARY LOG STATUS", Position, 1)

# Mysqld.2 - Save binlog file and positions after table created
--connection mysqld2
--let $binlog_file2= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos2= query_get_value("SHOW BINARY LOG STATUS", Position, 1)

INSERT INTO t1 VALUES (1, 'first', x'6F6464'),
                      (2, 'second', x'6576656E'),
                      (3, 'first', x'6F6464'),
                      (4, 'second', x'6576656E'),
                      (5, 'first', x'6F6464'),
                      (6, 'second', x'6576656E'),
                      (7, 'first', x'6F6464'),
                      (8, 'second', x'6576656E'),
                      (9, 'first', x'6F6464'),
                      (10, 'second', x'6576656E'),
                      (11, 'first', x'6F6464'),
                      (12, 'second', x'6576656E');
--save_master_pos
--connection mysqld1
--save_master_pos

# Disable log-bin on all servers
--connection mysqld1
SET sql_log_bin = 'OFF';
--connection mysqld2
SET sql_log_bin = 'OFF';
--connection mysqld3
SET sql_log_bin = 'OFF';
--connection mysqld4
SET sql_log_bin = 'OFF';

# Save the count of data to assert later the distribution
--let $data_volume=`SELECT COUNT(*) FROM t1`

# Mysqld.4 - Now delete all data
DELETE FROM t1;
SELECT COUNT(*) FROM t1;

# Back to Mysqld.1
--connection mysqld1

--let $MYSQLD_DATADIR= `select @@datadir;`
# Import one at a time verifying that binlogged data is split
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file1
--let $binlog_position= $binlog_pos1
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql

--echo # Should be close to $data_volume/2
--eval SET @data_volume = $data_volume/2
SELECT IF(COUNT(*) >= @data_volume-1 AND COUNT(*) <= @data_volume+1, 'YES', 'NO') AS BALANCED FROM t1;

--connection mysqld2
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file2
--let $binlog_position= $binlog_pos2
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql

--echo # Must be equal to 12
SELECT COUNT(*) FROM t1;

# Re-enable log-bin on all servers
--connection mysqld1
SET sql_log_bin = 'ON';
--connection mysqld2
SET sql_log_bin = 'ON';
--connection mysqld3
SET sql_log_bin = 'ON';
--connection mysqld4
SET sql_log_bin = 'ON';

--echo # #######################################################################
--echo # Second scenario:
--echo #
--echo # In this test, there are three split groups of binlogged rows: group 0
--echo # logged by mysqld.1, group 1 logged by mysqld.2 and group 2 logged by
--echo # both mysqld.3 and mysqld.4. (mysqld.3 == mysqld.4)
--echo # The restored data must match what was written.
--echo #

# Restart servers setting up the new options
--connection mysqld1
--let $restart_parameters= restart:--ndb-log-row-slice-count=3 --ndb-log-row-slice-id=0
--let $mysqld_name= mysqld.1.1
--source include/restart_mysqld.inc

--connection mysqld2
--let $restart_parameters= restart:--ndb-log-row-slice-count=3 --ndb-log-row-slice-id=1
--let $mysqld_name= mysqld.2.1
--source include/restart_mysqld.inc

--connection mysqld3
--let $restart_parameters= restart:--ndb-log-row-slice-count=3 --ndb-log-row-slice-id=2
--let $mysqld_name= mysqld.3.1
--source include/restart_mysqld.inc

--connection mysqld4
--let $restart_parameters= restart:--ndb-log-row-slice-count=3 --ndb-log-row-slice-id=2
--let $mysqld_name= mysqld.4.1
--source include/restart_mysqld.inc

--connection mysqld1
# Create table and insert data
CREATE TABLE t2 (k INT PRIMARY KEY, a VARCHAR(2048), b VARBINARY(4096)) ENGINE = NDB;
--save_master_pos

# save binlog positions
--connection mysqld1
--let $binlog_file1= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos1= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld2
--let $binlog_file2= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos2= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld3
--let $binlog_file3= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos3= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld4
--let $binlog_file4= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos4= query_get_value("SHOW BINARY LOG STATUS", Position, 1)

# At Mysqld.4
INSERT INTO t2 VALUES (1, 'odd', repeat(x'6F6464',1024)),
                      (2, 'even', repeat(x'6576656E',1024)),
                      (3, 'odd', repeat(x'6F6464',1024)),
                      (4, 'even', repeat(x'6576656E',1024)),
                      (5, 'odd', repeat(x'6F6464',1024)),
                      (6, 'even', repeat(x'6576656E',1024)),
                      (7, 'odd', repeat(x'6F6464',1024)),
                      (8, 'even', repeat(x'6576656E',1024)),
                      (9, 'odd', repeat(x'6F6464',1024)),
                      (10, 'even', repeat(x'6576656E',1024)),
                      (11, 'odd', repeat(x'6F6464',1024)),
                      (12, 'even', repeat(x'6576656E',1024));
--save_master_pos
--connection mysqld1
--save_master_pos
--connection mysqld2
--save_master_pos
--connection mysqld3
--save_master_pos

# Disable log-bin on all servers
--connection mysqld1
SET sql_log_bin = 'OFF';
--connection mysqld2
SET sql_log_bin = 'OFF';
--connection mysqld3
SET sql_log_bin = 'OFF';
--connection mysqld4
SET sql_log_bin = 'OFF';

# Save the count of data to assert later the distribution
--let $data_volume=`SELECT COUNT(*) FROM t2`

# Mysqld.4 - Now delete all data
DELETE FROM t2;
SELECT COUNT(*) FROM t2;

# Import one at a time verifying that binlogged data is split

# @Mysqld.4
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file4
--let $binlog_position= $binlog_pos4
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql4_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql4_binlog.sql

--echo # Should be close to $data_volume/3
--eval SET @data_volume = $data_volume/3
SELECT IF(COUNT(*) >= @data_volume-1 AND COUNT(*) <= @data_volume+1, 'YES', 'NO') AS BALANCED FROM t2;
#SELECT COUNT(*) FROM t2; # comment out

--connection mysqld2
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file2
--let $binlog_position= $binlog_pos2
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql

# Shoud be different to 12.
--echo # Should be close to 2*($data_volume/3)
--eval SET @data_volume = 2*($data_volume/3)
SELECT IF(COUNT(*) >= @data_volume-1 AND COUNT(*) <= @data_volume+1, 'YES', 'NO') AS BALANCED FROM t2;
#SELECT COUNT(*) FROM t2; # comment out

--connection mysqld1
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file1
--let $binlog_position= $binlog_pos1
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql

--echo # Must be equal to 12.
SELECT COUNT(*) FROM t2;

# Re-enable log-bin on all servers
--connection mysqld1
SET sql_log_bin = 'ON';
--connection mysqld2
SET sql_log_bin = 'ON';
--connection mysqld3
SET sql_log_bin = 'ON';
--connection mysqld4
SET sql_log_bin = 'ON';


--echo # #######################################################################
--echo # Third scenario:
--echo #
--echo # In this test, there are four split groups of binlogged rows: group 0
--echo # logged by mysqld.1, group 1 logged by mysqld.2, group 2 logged by
--echo # mysqld.3 and group 3 logged by mysqld.4.
--echo # (mysqld.1 != mysqld.2 != mysqlmysqld.3 != mysqld.4)
--echo # The restored data must match what was written.
--echo #

# Restart servers setting up the new options
--connection mysqld1
--let $restart_parameters= restart:--ndb-log-row-slice-count=4 --ndb-log-row-slice-id=0
--let $mysqld_name= mysqld.1.1
--source include/restart_mysqld.inc

--connection mysqld2
--let $restart_parameters= restart:--ndb-log-row-slice-count=4 --ndb-log-row-slice-id=1
--let $mysqld_name= mysqld.2.1
--source include/restart_mysqld.inc

--connection mysqld3
--let $restart_parameters= restart:--ndb-log-row-slice-count=4 --ndb-log-row-slice-id=2
--let $mysqld_name= mysqld.3.1
--source include/restart_mysqld.inc

--connection mysqld4
--let $restart_parameters= restart:--ndb-log-row-slice-count=4 --ndb-log-row-slice-id=3
--let $mysqld_name= mysqld.4.1
--source include/restart_mysqld.inc

--connection mysqld1
# Create table and insert data
CREATE TABLE t3 (k INT PRIMARY KEY, a VARCHAR(4096), b VARBINARY(8192)) ENGINE = NDB;
--save_master_pos

# save binlog positions
--connection mysqld1
--let $binlog_file1= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos1= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld2
--let $binlog_file2= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos2= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld3
--let $binlog_file3= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos3= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld4
--let $binlog_file4= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos4= query_get_value("SHOW BINARY LOG STATUS", Position, 1)

# At Mysqld.4
INSERT INTO t3 VALUES (1, 'odd', repeat(x'6F6464',2048)),
                      (2, 'even', repeat(x'6576656E',2048)),
                      (3, 'odd', repeat(x'6F6464',2048)),
                      (4, 'even', repeat(x'6576656E',2048)),
                      (5, 'odd', repeat(x'6F6464',2048)),
                      (6, 'even', repeat(x'6576656E',2048)),
                      (7, 'odd', repeat(x'6F6464',2048)),
                      (8, 'even', repeat(x'6576656E',2048)),
                      (9, 'odd', repeat(x'6F6464',2048)),
                      (10, 'even', repeat(x'6576656E',2048)),
                      (11, 'odd', repeat(x'6F6464',2048)),
                      (12, 'even', repeat(x'6576656E',2048));
--save_master_pos
--connection mysqld1
--save_master_pos
--connection mysqld2
--save_master_pos
--connection mysqld3
--save_master_pos

# Disable log-bin on all servers
--connection mysqld1
SET sql_log_bin = 'OFF';
--connection mysqld2
SET sql_log_bin = 'OFF';
--connection mysqld3
SET sql_log_bin = 'OFF';
--connection mysqld4
SET sql_log_bin = 'OFF';

# Save the count of data to assert later the distribution
--let $data_volume=`SELECT COUNT(*) FROM t3`

# Mysqld.4 - Now delete all data
DELETE FROM t3;
SELECT COUNT(*) FROM t3;

# @Mysqld.4
--let $MYSQLD_DATADIR= `select @@datadir;`
# Import one at a time verifying that binlogged data is split
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file4
--let $binlog_position= $binlog_pos4
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql4_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql4_binlog.sql

--echo # Should be close to $data_volume/4
--eval SET @data_volume = $data_volume/4
SELECT IF(COUNT(*) >= @data_volume-1 AND COUNT(*) <= @data_volume+1, 'YES', 'NO') AS BALANCED FROM t3;
#SELECT COUNT(*) FROM t3; # comment out

--connection mysqld3
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file3
--let $binlog_position= $binlog_pos3
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql3_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql3_binlog.sql

--echo # Should be close to 2*($data_volume/4)
--eval SET @data_volume = 2*($data_volume/4)
SELECT IF(COUNT(*) >= @data_volume-1 AND COUNT(*) <= @data_volume+1, 'YES', 'NO') AS BALANCED FROM t3;
#SELECT COUNT(*) FROM t3; # comment out

--connection mysqld2
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file2
--let $binlog_position= $binlog_pos2
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql

--echo # Should be close to 3*($data_volume/4)
--eval SET @data_volume = 3*($data_volume/4)
SELECT IF(COUNT(*) >= @data_volume-1 AND COUNT(*) <= @data_volume+1, 'YES', 'NO') AS BALANCED FROM t3;
#SELECT COUNT(*) FROM t3; # comment out

--connection mysqld1
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file1
--let $binlog_position= $binlog_pos1
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql

--echo # Must be equal to 12.
SELECT COUNT(*) FROM t3;

# Re-enable log-bin on all servers
--connection mysqld1
SET sql_log_bin = 'ON';
--connection mysqld2
SET sql_log_bin = 'ON';
--connection mysqld3
SET sql_log_bin = 'ON';
--connection mysqld4
SET sql_log_bin = 'ON';


--echo # #######################################################################
--echo # Fourth scenario:
--echo #
--echo # This test illustrates the rollout of the row group splitting feature on
--echo # an existing cluster. The configuration has one mysqld node binlog 100%
--echo # of the changes, while the rest of mysqld nodes receive only a subset of
--echo # the rows.
--echo # (mysqld.1 = 1/1, mysqld.2 = 1/3, mysqld.3 = 1/3, mysqld.4 = 1/3
--echo # The restored data from mysqld's 2, 3 and 4 must match what is at mysqld.1
--echo #

# Take an already created table
--connection mysqld1
CREATE TABLE t4 (k INT PRIMARY KEY, a VARCHAR(1024), b VARBINARY(4096)) ENGINE = NDB;
--save_master_pos

# Restart servers setting up the new options
--connection mysqld1 # be sure
--let $restart_parameters= restart:--ndb-log-row-slice-count=1 --ndb-log-row-slice-id=0
--let $mysqld_name= mysqld.1.1
--source include/restart_mysqld.inc

--connection mysqld2
--let $restart_parameters= restart:--ndb-log-row-slice-count=3 --ndb-log-row-slice-id=0
--let $mysqld_name= mysqld.2.1
--source include/restart_mysqld.inc

--connection mysqld3
--let $restart_parameters= restart:--ndb-log-row-slice-count=3 --ndb-log-row-slice-id=1
--let $mysqld_name= mysqld.3.1
--source include/restart_mysqld.inc

--connection mysqld4
--let $restart_parameters= restart:--ndb-log-row-slice-count=3 --ndb-log-row-slice-id=2
--let $mysqld_name= mysqld.4.1
--source include/restart_mysqld.inc

# save binlog positions
--connection mysqld1
--let $binlog_file1= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos1= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld2
--let $binlog_file2= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos2= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld3
--let $binlog_file3= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos3= query_get_value("SHOW BINARY LOG STATUS", Position, 1)
--connection mysqld4
--let $binlog_file4= query_get_value("SHOW BINARY LOG STATUS", File, 1)
--let $binlog_pos4= query_get_value("SHOW BINARY LOG STATUS", Position, 1)

# At Mysqld.4
INSERT INTO t4 VALUES (1, 'odd', repeat(x'6F6464',1024)),
                      (2, 'even', repeat(x'6576656E',1024)),
                      (3, 'odd', repeat(x'6F6464',1024)),
                      (4, 'even', repeat(x'6576656E',1024)),
                      (5, 'odd', repeat(x'6F6464',1024)),
                      (6, 'even', repeat(x'6576656E',1024)),
                      (7, 'odd', repeat(x'6F6464',1024)),
                      (8, 'even', repeat(x'6576656E',1024)),
                      (9, 'odd', repeat(x'6F6464',1024)),
                      (10, 'even', repeat(x'6576656E',1024)),
                      (11, 'odd', repeat(x'6F6464',1024)),
                      (12, 'even', repeat(x'6576656E',1024));
--save_master_pos
--connection mysqld1
--save_master_pos
--connection mysqld2
--save_master_pos
--connection mysqld3
--save_master_pos

# Disable log-bin on all servers
--connection mysqld1
SET sql_log_bin = 'OFF';
--connection mysqld2
SET sql_log_bin = 'OFF';
--connection mysqld3
SET sql_log_bin = 'OFF';
--connection mysqld4
SET sql_log_bin = 'OFF';

# Save the count of data to assert later the distribution
--let $data_volume=`SELECT COUNT(*) FROM t4`

# Mysqld.4 - Now delete all data
DELETE FROM t4;
SELECT COUNT(*) FROM t4;

# Import one at a time verifying that binlogged data is split

# @Mysqld.4
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file4
--let $binlog_position= $binlog_pos4
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql4_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql4_binlog.sql

--echo # Should be close to $data_volume/3
--eval SET @data_volume = $data_volume/3
SELECT IF(COUNT(*) >= @data_volume-1 AND COUNT(*) <= @data_volume+1, 'YES', 'NO') AS BALANCED FROM t4;
#SELECT COUNT(*) FROM t4; # comment out

--connection mysqld3
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file3
--let $binlog_position= $binlog_pos3
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql3_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql3_binlog.sql

--echo # Should be close to 2*($data_volume/3)
--eval SET @data_volume = 2*($data_volume/3)
SELECT IF(COUNT(*) >= @data_volume-1 AND COUNT(*) <= @data_volume+1, 'YES', 'NO') AS BALANCED FROM t4;
#SELECT COUNT(*) FROM t4; # comment out

--connection mysqld2
--let $MYSQLD_DATADIR= `select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file2
--let $binlog_position= $binlog_pos2
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql

--echo # Must be equal to 12.
SELECT COUNT(*) FROM t4;

--echo # Mysqld.1's binlog must have all data (100%).
--echo # Delete and restore from it
--connection mysqld1
DELETE FROM t4;
SELECT COUNT(*) FROM t4;
--let $MYSQLD_DATADIR=`select @@datadir;`
--let $binlog_fullpath= $MYSQLD_DATADIR/$binlog_file1
--let $binlog_position= $binlog_pos1
--let $mysqlbinlog_pipe= > $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql
--source include/rpl/mysqlbinlog.inc
--exec $MYSQL -uroot < $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql

--echo # All data imported
SELECT COUNT(*) FROM t4;

# Re-enable log-bin on all servers
--connection mysqld1
SET sql_log_bin = 'ON';
--connection mysqld2
SET sql_log_bin = 'ON';
--connection mysqld3
SET sql_log_bin = 'ON';
--connection mysqld4
SET sql_log_bin = 'ON';

--echo # #######################################################################
--echo # Fifth scenario:
--echo #
--echo # This test uses the same configuration as before, but the created table
--echo # contains BLOBs. The create table must fail on a server that configures
--echo # binlog row slices.
--echo

# Note: No need to reconfigure servers; using the same row split group config

--echo # Using mysqld.2 it fails CREATE TABLE
--connection mysqld2
# Create table and insert data
--error ER_CANT_CREATE_TABLE
CREATE TABLE t5 (k INT PRIMARY KEY, b BLOB, t TEXT) ENGINE = NDB;
SHOW WARNINGS;
--echo # Using mysqld.1 (no binlog row slices) it fails DISTRIBUTION
--connection mysqld1
CREATE TABLE t5 (k INT PRIMARY KEY, b BLOB, t TEXT) ENGINE = NDB;

--echo # Cleanup
--remove_file $MYSQLTEST_VARDIR/tmp/mysql1_binlog.sql
--remove_file $MYSQLTEST_VARDIR/tmp/mysql2_binlog.sql
--remove_file $MYSQLTEST_VARDIR/tmp/mysql3_binlog.sql
--remove_file $MYSQLTEST_VARDIR/tmp/mysql4_binlog.sql

--connection mysqld1
DROP TABLE t1;
DROP TABLE t2;
DROP TABLE t3;
DROP TABLE t4;
DROP TABLE t5;
--let $restart_parameters= restart:
--let $mysqld_name= mysqld.1.1
--source include/restart_mysqld.inc

--connection mysqld2
--let $restart_parameters= restart:
--let $mysqld_name= mysqld.2.1
--source include/restart_mysqld.inc

--connection mysqld3
--let $restart_parameters= restart:
--let $mysqld_name= mysqld.3.1
--source include/restart_mysqld.inc

--connection mysqld4
--let $restart_parameters= restart:
--let $mysqld_name= mysqld.4.1
--source include/restart_mysqld.inc
